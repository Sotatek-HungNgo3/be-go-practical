basePath: /
definitions:
  dto.OrderDto:
    properties:
      paymentMethod:
        $ref: '#/definitions/enum.PaymentMethod'
      productName:
        type: string
      quantity:
        type: integer
      unitPrice:
        type: number
    required:
    - paymentMethod
    - productName
    - quantity
    - unitPrice
    type: object
  enum.OrderStatus:
    enum:
    - Created
    - Failed
    - Confirmed
    - Cancelled
    - Delivered
    type: string
    x-enum-varnames:
    - OrderStatusCreated
    - OrderStatusFailed
    - OrderStatusConfirmed
    - OrderStatusCancelled
    - OrderStatusDelivered
  enum.PaymentMethod:
    enum:
    - Card
    - Cash
    type: string
    x-enum-varnames:
    - PaymentMethodCard
    - PaymentMethodCash
  model.Order:
    properties:
      createdAt:
        type: string
      errorMessage:
        type: string
      id:
        type: integer
      paymentMethod:
        type: string
      productName:
        type: string
      quantity:
        type: integer
      status:
        $ref: '#/definitions/enum.OrderStatus'
      unitPrice:
        type: number
      updatedAt:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Swagger for order service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Swagger Example API
  version: "1.0"
paths:
  /orders:
    get:
      consumes:
      - application/json
      description: Get a list of orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Order'
            type: array
      summary: Get a list of orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create order
      parameters:
      - description: New order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.OrderDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
      summary: Create order
      tags:
      - orders
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: Get order by id
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
      summary: Get order by id
      tags:
      - orders
    patch:
      consumes:
      - application/json
      description: Cancel order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
      summary: Cancel order
      tags:
      - orders
swagger: "2.0"
